basePath: /
definitions:
  posts.Post:
    properties:
      content:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      updatedAt:
        type: string
      userId:
        type: integer
    type: object
  users.SignInInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  users.SignUpInput:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        minLength: 8
        type: string
      passwordConfirm:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - passwordConfirm
    - username
    type: object
  users.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      phone:
        type: string
      posts:
        items:
          $ref: '#/definitions/posts.Post'
        type: array
      profile:
        $ref: '#/definitions/users.UserProfile'
      role:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  users.UserProfile:
    properties:
      bio:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      updatedAt:
        type: string
      userId:
        type: integer
    type: object
host: localhost:8000
info:
  contact: {}
  description: Swagger for Socalize app
  license:
    name: Apache License, Version 2.0 (the "License")
    url: https://github.com/acikkaynak/deprem-yardim-backend-go/blob/main/LICENSE
  title: Socalize API
  version: "1.0"
paths:
  /auth/signin:
    post:
      parameters:
      - description: Login
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/users.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Login
      tags:
      - Auth
  /auth/signup:
    post:
      parameters:
      - description: Register
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/users.SignUpInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
      summary: Register
      tags:
      - Auth
  /users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/users.User'
            type: array
      security:
      - Bearer: []
      summary: Get Users
      tags:
      - Users
schemes:
- http
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
